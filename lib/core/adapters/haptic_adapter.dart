import 'package:flutter/foundation.dart';

/// Interface pour le retour haptique multi-plateforme
abstract class HapticAdapter {
  /// Feedback haptique lÃ©ger (sÃ©lection, navigation)
  Future<void> lightImpact();

  /// Feedback haptique moyen (boutons, actions)
  Future<void> mediumImpact();

  /// Feedback haptique fort (erreurs, validation)
  Future<void> heavyImpact();

  /// Feedback de sÃ©lection (switches, pickers)
  Future<void> selectionClick();

  /// Vibration personnalisÃ©e (durÃ©e en ms)
  Future<void> customVibration(int milliseconds);

  /// VÃ©rifier si le haptic est supportÃ©
  bool get isSupported;
}

/// ImplÃ©mentation mobile (iOS/Android)
class MobileHapticAdapter implements HapticAdapter {
  @override
  Future<void> lightImpact() async {
    // ImplÃ©mentation avec haptic_feedback plugin
    if (kDebugMode) {
      debugPrint('ðŸ”Š Haptic: light impact');
    }
    // TODO: IntÃ©grer avec HapticService existant
  }

  @override
  Future<void> mediumImpact() async {
    if (kDebugMode) {
      debugPrint('ðŸ”Š Haptic: medium impact');
    }
    // TODO: IntÃ©grer avec HapticService existant
  }

  @override
  Future<void> heavyImpact() async {
    if (kDebugMode) {
      debugPrint('ðŸ”Š Haptic: heavy impact');
    }
    // TODO: IntÃ©grer avec HapticService existant
  }

  @override
  Future<void> selectionClick() async {
    if (kDebugMode) {
      debugPrint('ðŸ”Š Haptic: selection click');
    }
    // TODO: IntÃ©grer avec HapticService existant
  }

  @override
  Future<void> customVibration(int milliseconds) async {
    if (kDebugMode) {
      debugPrint('ðŸ”Š Haptic: custom vibration ${milliseconds}ms');
    }
    // TODO: IntÃ©grer avec HapticService existant
  }

  @override
  bool get isSupported => true;
}

/// Stub pour Web/Desktop (pas de haptic)
class DesktopHapticStub implements HapticAdapter {
  @override
  Future<void> lightImpact() async {
    if (kDebugMode) {
      debugPrint('ðŸ”‡ Haptic stub: light impact (no-op)');
    }
  }

  @override
  Future<void> mediumImpact() async {
    if (kDebugMode) {
      debugPrint('ðŸ”‡ Haptic stub: medium impact (no-op)');
    }
  }

  @override
  Future<void> heavyImpact() async {
    if (kDebugMode) {
      debugPrint('ðŸ”‡ Haptic stub: heavy impact (no-op)');
    }
  }

  @override
  Future<void> selectionClick() async {
    if (kDebugMode) {
      debugPrint('ðŸ”‡ Haptic stub: selection click (no-op)');
    }
  }

  @override
  Future<void> customVibration(int milliseconds) async {
    if (kDebugMode) {
      debugPrint('ðŸ”‡ Haptic stub: custom vibration ${milliseconds}ms (no-op)');
    }
  }

  @override
  bool get isSupported => false;
}

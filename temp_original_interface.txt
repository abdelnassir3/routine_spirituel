  Widget _buildSessionReaderInterface(
    BuildContext context,
    TaskRow task,
    AsyncValue<TaskProgressRow?> currentProgressAsync,
    CounterState counterState,
    bool handsFreeMode,
    String language,
  ) {
    final theme = Theme.of(context);
    final cs = theme.colorScheme;
    final readerTheme = ref.watch(enhancedReaderThemeModeProvider);
    final focusMode = ref.watch(enhancedReaderFocusModeProvider);
    final sidePadding = ref.watch(enhancedReaderSidePaddingProvider);

    return Scaffold(
      backgroundColor: theme.colorScheme.background,
      body: SafeArea(
        child: Column(
          children: [
            // Header avec progression
            Container(
              padding: const EdgeInsets.all(20),
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                  colors: [
                    cs.primary,
                    cs.primary.withOpacity(0.8),
                    cs.secondary.withOpacity(0.6),
                  ],
                ),
              ),
              child: Column(
                children: [
                  // Navigation
                  Row(
                    children: [
                      Container(
                        decoration: BoxDecoration(
                          gradient: LinearGradient(
                            colors: [
                              Colors.white.withOpacity(0.3),
                              Colors.white.withOpacity(0.15),
                            ],
                          ),
                          borderRadius: BorderRadius.circular(14),
                          border: Border.all(
                            color: Colors.white.withOpacity(0.4),
                            width: 1.5,
                          ),
                        ),
                        child: IconButton(
                          onPressed: _stopSession,
                          icon: const Icon(
                            Icons.arrow_back_ios_rounded,
                            color: Colors.white,
                            size: 20,
                          ),
                        ),
                      ),
                      const SizedBox(width: 12),
                      // Bouton de paramètres avancés
                      Container(
                        decoration: BoxDecoration(
                          gradient: LinearGradient(
                            colors: [
                              Colors.white.withOpacity(0.3),
                              Colors.white.withOpacity(0.15),
                            ],
                          ),
                          borderRadius: BorderRadius.circular(14),
                          border: Border.all(
                            color: Colors.white.withOpacity(0.4),
                            width: 1.5,
                          ),
                        ),
                        child: IconButton(
                          onPressed: () => _showEnhancedSettingsBottomSheet(context),
                          icon: const Icon(
                            Icons.tune_rounded,
                            color: Colors.white,
                            size: 20,
                          ),
                        ),
                      ),
                      const SizedBox(width: 16),
                      Expanded(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              task.notesFr?.isNotEmpty == true ? task.notesFr! : 'Lecture spirituelle',
                              style: theme.textTheme.headlineSmall?.copyWith(
                                color: Colors.white,
                                fontWeight: FontWeight.w700,
                                shadows: const [
                                  Shadow(color: Colors.black26, blurRadius: 8, offset: Offset(0, 2)),
                                ],
                              ),
                            ),
                            const SizedBox(height: 4),
                            currentProgressAsync.when(
                              data: (progress) => Text(
                                progress != null ? 'Répétitions: ${progress.remainingReps}' : 'Étape 1/1',
                                style: theme.textTheme.bodyMedium?.copyWith(
                                  color: Colors.white.withOpacity(0.9),
                                  shadows: const [
                                    Shadow(color: Colors.black26, blurRadius: 6, offset: Offset(0, 1)),
                                  ],
                                ),
                              ),
                              loading: () => Text(
                                'Étape 1/1',
                                style: theme.textTheme.bodyMedium?.copyWith(
                                  color: Colors.white.withOpacity(0.9),
                                ),
                              ),
                              error: (_, __) => const SizedBox(),
                            ),
                          ],
                        ),
                      ),
                      // Compteur de répétitions restantes
                      Container(
                        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(0.2),
                          borderRadius: BorderRadius.circular(20),
                          border: Border.all(
                            color: Colors.white.withOpacity(0.3),
                          ),
                        ),
                        child: Row(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Text(
                              'Restant:',
                              style: theme.textTheme.bodySmall?.copyWith(
                                color: Colors.white.withOpacity(0.9),
                                fontWeight: FontWeight.w500,
                              ),
                            ),
                            const SizedBox(width: 4),
                            Text(
                              '${counterState.remaining}',
                              style: theme.textTheme.titleMedium?.copyWith(
                                color: Colors.white,
                                fontWeight: FontWeight.w700,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),

            // Contrôles de texte rapides
            _buildQuickTextControls(context),

            // Contenu principal de lecture
            Expanded(
              child: Container(
                margin: EdgeInsets.all(focusMode ? 10 : 20),
                padding: EdgeInsets.symmetric(
                  horizontal: 24 + sidePadding,
                  vertical: focusMode ? 16 : 24,
                ),
                decoration: BoxDecoration(
                  color: _getReaderThemeBackgroundColor(readerTheme, theme),
                  borderRadius: BorderRadius.circular(focusMode ? 12 : 20),
                  boxShadow: focusMode ? [] : [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.08),
                      blurRadius: 20,
                      offset: const Offset(0, 8),
                    ),
                  ],
                ),
                child: _buildSessionTextContent(context, task, language),
              ),
            ),

            // Contrôles de session
            _buildSessionControls(context, task, counterState, handsFreeMode, language),
          ],
        ),
      ),
    );
  }

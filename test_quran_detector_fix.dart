import 'dart:io';
import 'package:flutter/services.dart';
import 'package:flutter/foundation.dart';
import 'dart:convert';

/// Script simple pour v√©rifier que le corpus Coran est correctement charg√©
void main() async {
  print('üß™ Test de v√©rification du corpus Coran');
  print('=====================================');

  try {
    // V√©rifier que les fichiers corpus existent physiquement
    final quranCombined = File('assets/corpus/quran_combined.json');
    final quranFull = File('assets/corpus/quran_full.json');

    print('üìÅ V√©rification des fichiers:');
    print(
        '  - quran_combined.json: ${await quranCombined.exists() ? "‚úÖ Existe" : "‚ùå Manquant"}');
    print(
        '  - quran_full.json: ${await quranFull.exists() ? "‚úÖ Existe" : "‚ùå Manquant"}');

    if (await quranFull.exists()) {
      final fullContent = await quranFull.readAsString();
      final fullData = jsonDecode(fullContent) as List;
      print('  - Nombre de versets dans quran_full.json: ${fullData.length}');

      if (fullData.length >= 6000) {
        print('‚úÖ Corpus complet d√©tect√© (${fullData.length} versets)');
      } else {
        print('‚ö†Ô∏è  Corpus partiel (${fullData.length} versets, attendu: 6236)');
      }

      // V√©rifier quelques versets sp√©cifiques
      final fatiha1 = fullData.firstWhere(
          (v) => v['surah'] == 1 && v['ayah'] == 1,
          orElse: () => null);
      final bakara1 = fullData.firstWhere(
          (v) => v['surah'] == 2 && v['ayah'] == 1,
          orElse: () => null);

      print('üìñ V√©rification de versets cl√©s:');
      print(
          '  - Al-Fatiha 1:1: ${fatiha1 != null ? "‚úÖ Trouv√©" : "‚ùå Manquant"}');
      print(
          '  - Al-Bakara 2:1: ${bakara1 != null ? "‚úÖ Trouv√©" : "‚ùå Manquant"}');

      if (fatiha1 != null) {
        print('  - Texte Al-Fatiha 1:1: "${fatiha1['textAr']}"');
      }
    }

    if (await quranCombined.exists()) {
      final combinedContent = await quranCombined.readAsString();
      final combinedData = jsonDecode(combinedContent) as List;
      print(
          '  - Nombre de versets dans quran_combined.json: ${combinedData.length}');

      if (combinedData.length == 1) {
        print('‚ö†Ô∏è  Corpus r√©duit d√©tect√© (ancien probl√®me)');
      }
    }
  } catch (e) {
    print('‚ùå Erreur lors de la v√©rification: $e');
  }

  print('\nüí° Changement appliqu√©:');
  print(
      '   QuranContentDetector charge maintenant quran_full.json au lieu de quran_combined.json');
  print('\nüöÄ R√©sultat attendu apr√®s le changement:');
  print('   - D√©tection coranique: confidence >85% au lieu de 3.2%');
  print('   - Texte coranique rout√© vers QuranRecitationService');
  print('   - Texte arabe normal rout√© vers TTS arabe');
}
